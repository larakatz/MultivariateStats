"AcAp Alpine Tundra",
"Clay",
"Coast",
"Elevation",
"pH",
"Sand",
"Silt",
"Slope") # make land cover class names shorter
colnames(data.num) <- data.num.names
corr <- cor(data.num, method = "pearson")
library(corrplot)
corrplot <- corrplot(corr,
type="lower", #shape of the plot itself: full, upper, lower
method="color", #shape of the data: circle, square, ellipse, number, shade, color, pie
diag = FALSE,
order="FPC", #how to cluster samples: AOE, hclust, FPC, alphabet, or leave blank
#p.mat = corrtest$p, #which correlations to use
#sig.level=0.05, #sets significance cutoff
#insig="label_sig",#leaves p > 0.05 blank
# addCoef.col = "black",
# number.cex = 0.5,
pch.col = "black",
pch.cex = 0.9,
tl.col="black", # text color
tl.cex=.7,#text size
tl.srt = 45,
col = COL2(diverging = "RdYlBu"))
head(corr)
str(data.num)
max(data.num$Barren)
max(data.num$Water)
# Check variables for multicollinearity
data.num <- as.data.frame(bds[,-c(1,2,30,34,35)]) # remove non-continuous data
str(data.num)
max(data.num$X01_water)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy = TRUE)
install.packages("formatR")
install.packages("Rtools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(terra)
library(ggplot2)
library(corrplot)
bds <- read.csv("./Data/Katz_BDS_data.csv")
bds <- bds[,-1] # remove first column
head(bds)
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
install.packages("mvnormtest")
install.packages("MVN")
install.packages("MVA")
install.packages("psych")
install.packages("Hmisc")
install.packages("vegan")
install.packages("StatMatch")
install.packages("MASS")
install.packages("raster")
install.packages("cluster")
library(mvnormtest)
library(MVN)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(raster)
library(cluster)
usAir<-USairpollution
usAir_mod<- read.csv("./Data/usAir_mod.csv", row=1, header=TRUE)
describeBy(usAir)
describeBy(usAir_mod)
?USairpollution
describe(usAir_mod)
usAir_mod [complete.cases(usAir_mod),]
View(usAir)
#First, let’s calculate the mean of each variable (column) with the NA removed:
meanz<-colMeans(usAir_mod,na.rm=T)
#`na.rm=T`, means that you want to remove NAs
#To replace your NAs with the means you just calculated you will use the following function:
naFunc<-function(column) {
column[is.na(column)]  = round(mean(column, na.rm = TRUE),2)
return(column)
}
#and “apply” it to the usair_mod data set
Impute<-apply(usAir_mod,2,naFunc)
describe(Impute)
mshapiro.test(t(usAir))
mvn(usAir, mvnTest = "mardia")
usAir$SO2
#or
usAir[,1]
#Next you can simply wrap either of those commands in the histogram function:
hist(usAir$SO2)
#or
hist(usAir[,1])
?log1p
usAirlog<-log1p(usAir)
?log1p
hist(usAirlog$SO2)
#or
hist(usAirlog[,1])
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirlog[,1])
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
usAirsqrt<-sqrt(usAir)
hist(usAirsqrt$SO2)
#or
hist(usAirsqrt[,1])
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirsqrt[,1])
par(mfrow=c(1,2))
hist(usAir[,2])
hist(usAirsqrt[,2])
par(mfrow=c(1,2))
hist(usAir[,3])
hist(usAirsqrt[,3])
par(mfrow=c(1,2))
hist(usAir[,4])
hist(usAirsqrt[,4])
par(mfrow=c(1,2))
hist(usAir[,5])
hist(usAirsqrt[,5])
par(mfrow=c(1,2))
hist(usAir[,6])
hist(usAirsqrt[,6])
par(mfrow=c(1,2))
hist(usAir[,7])
hist(usAirsqrt[,7])
newData<- runif(100, 0, 1)
asin(sqrt(newData))
par(mfrow=c(1,2))
hist(newData)
hist(asin(sqrt(newData)))
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
library(mvnormtest)
library(MVN)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(raster)
library(cluster)
usAir <- USairpollution
?USairpollution
# SO2: SO2 content of air in micrograms per cubic metre.
#
# temp: average annual temperature in Fahrenheit.
#
# manu: number of manufacturing enterprises employing 20 or more workers.
#
# popul: population size (1970 census); in thousands.
#
# wind# average annual wind speed in miles per hour.
#
# precip: average annual precipitation in inches.
#
# predays: average number of days with precipitation per year.
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
library(mvnormtest)
library(MVN)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(raster)
library(cluster)
usAir <- USairpollution
?USairpollution
# SO2: SO2 content of air in micrograms per cubic metre.
#
# temp: average annual temperature in Fahrenheit.
#
# manu: number of manufacturing enterprises employing 20 or more workers.
#
# popul: population size (1970 census); in thousands.
#
# wind# average annual wind speed in miles per hour.
#
# precip: average annual precipitation in inches.
#
# predays: average number of days with precipitation per year.
usAir_mod <- read.csv("./Data/usAir_mod.csv", row=1, header=TRUE)
usAir_mod <- read.csv("./usAir_mod.csv", row=1, header=TRUE)
usAir_mod <- read.csv("./Data/usAir_mod.csv", row=1, header=TRUE)
usAir_mod <- read.csv("C:/Users/larak/OneDrive - University of Maine System/LSK_PhD_Files/PhD Courses/WLE650_MultiStats/Data/usAir_mod.csv", row=1, header=TRUE)
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
usAir_mod <- read.csv("./Data/usAir_mod.csv", row=1, header=TRUE)
describeBy(usAir)
describeBy(usAir_mod)
describe(usAir_mod)
usAir_mod [complete.cases(usAir_mod),]
#First, let’s calculate the mean of each variable (column) with the NA removed:
meanz<-colMeans(usAir_mod,na.rm=T)
#`na.rm=T`, means that you want to remove NAs
#To replace your NAs with the means you just calculated you will use the following function:
naFunc<-function(column) {
column[is.na(column)]  = round(mean(column, na.rm = TRUE),2)
return(column)
}
#and “apply” it to the usair_mod data set
Impute<-apply(usAir_mod,2,naFunc)
describe(Impute)
mvn(usAir, mvnTest = "mardia")
usAir$SO2
#or
usAir[,1]
#Next you can simply wrap either of those commands in the histogram function:
hist(usAir$SO2)
#or
hist(usAir[,1])
usAirlog<-log1p(usAir)
?log1p
hist(usAirlog$SO2)
#or
hist(usAirlog[,1])
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirlog[,1])
usAirsqrt<-sqrt(usAir)
hist(usAirsqrt$SO2)
#or
hist(usAirsqrt[,1])
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirsqrt[,1])
par(mfrow=c(1,2))
hist(usAir[,2])
hist(usAirsqrt[,2])
par(mfrow=c(1,2))
hist(usAir[,3])
hist(usAirsqrt[,3])
par(mfrow=c(1,2))
hist(usAir[,4])
hist(usAirsqrt[,4])
par(mfrow=c(1,2))
hist(usAir[,5])
hist(usAirsqrt[,5])
par(mfrow=c(1,2))
hist(usAir[,6])
hist(usAirsqrt[,6])
par(mfrow=c(1,2))
hist(usAir[,7])
hist(usAirsqrt[,7])
newData<- runif(100, 0, 1)
asin(sqrt(newData))
par(mfrow=c(1,2))
hist(newData)
hist(asin(sqrt(newData)))
cSums<-colSums(usAir)
Sdev<-sd(cSums)
M<-mean(cSums)
Cv<-Sdev/M*100
scaledData<-scale(usAir)
par(mfrow=c(1,2))
hist(usAir[,1] ,main=colnames(usAir)[1],xlab=" ")
hist(scaledData[,1] ,main=colnames(usAir)[1],xlab=" ")
scaledData<-scale(usAir)
par(mfrow=c(2,4))
hist(scaledData [,1] ,main=colnames(usAir)[1],xlab=" ")
hist(scaledData [,2] ,main=colnames(usAir)[2],xlab=" ")
hist(scaledData [,3] ,main=colnames(usAir)[3],xlab=" ")
hist(scaledData [,4] ,main=colnames(usAir)[4],xlab=" ")
hist(scaledData [,5] ,main=colnames(usAir)[5],xlab=" ")
hist(scaledData [,6] ,main=colnames(usAir)[6],xlab=" ")
hist(scaledData [,7] ,main=colnames(usAir)[7],xlab=" ")
mean(usAir$temp)
var(usAir$temp)
mean(scaledData$temp)
mean(scaledData[,2])
var(scaledData[,2])
mean(scaledData[,3]) # manu
var(scaledData[,3])
mean(scaledData[,4]) # popul
var(scaledData[,4])
mean(scaledData[,5]) # wind
var(scaledData[,5])
View(scaledData)
mean(scaledData[,6]) # precip
var(scaledData[,6])
mean(scaledData[,7]) # predays
var(scaledData[,7])
?scale
mean(scaledData[,1])
var(scaledData[,1])
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
library(mvnormtest)
library(MVN)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(raster)
library(cluster)
usAir <- USairpollution
?USairpollution
# SO2: SO2 content of air in micrograms per cubic metre.
#
# temp: average annual temperature in Fahrenheit.
#
# manu: number of manufacturing enterprises employing 20 or more workers.
#
# popul: population size (1970 census); in thousands.
#
# wind# average annual wind speed in miles per hour.
#
# precip: average annual precipitation in inches.
#
# predays: average number of days with precipitation per year.
usAir_mod <- read.csv("./Data/usAir_mod.csv", row=1, header=TRUE)
#First, let’s calculate the mean of each variable (column) with the NA removed:
meanz<-colMeans(usAir_mod,na.rm=T)
#`na.rm=T`, means that you want to remove NAs
#To replace your NAs with the means you just calculated you will use the following function:
naFunc<-function(column) {
column[is.na(column)]  = round(mean(column, na.rm = TRUE),2)
return(column)
}
#and “apply” it to the usair_mod data set
Impute <- apply(usAir_mod,2,naFunc)
describe(Impute)
mshapiro.test(t(usAir))
mvn(usAir, mvnTest = "mardia")
usAirlog<-log1p(usAir)
?log1p
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirlog[,1])
usAirsqrt<-sqrt(usAir)
par(mfrow=c(1,2))
hist(usAir[,1])
hist(usAirsqrt[,1])
par(mfrow=c(1,2))
hist(usAir[,2])
hist(usAirsqrt[,2])
par(mfrow=c(1,2))
hist(usAir[,3])
hist(usAirsqrt[,3])
par(mfrow=c(1,2))
hist(usAir[,4])
hist(usAirsqrt[,4])
par(mfrow=c(1,2))
hist(usAir[,5])
hist(usAirsqrt[,5])
par(mfrow=c(1,2))
hist(usAir[,6])
hist(usAirsqrt[,6])
par(mfrow=c(1,2))
hist(usAir[,7])
hist(usAirsqrt[,7])
newData<- runif(100, 0, 1)
par(mfrow=c(1,2))
hist(newData)
hist(asin(sqrt(newData)))
cSums<-colSums(usAir)
Sdev <- sd(cSums)
M <- mean(cSums)
Cv <- Sdev/M*100
scaledData <- scale(usAir)
par(mfrow=c(1,2))
hist(usAir[,1] ,main=colnames(usAir)[1],xlab=" ")
hist(scaledData[,1] ,main=colnames(usAir)[1],xlab=" ")
mean(scaledData[,1])
var(scaledData[,1])
library(knitr)
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(echo = TRUE, tidy = TRUE)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(tidyverse)
newMatrix <- matrix(c(1,4,5,4,5,6,9,1,9),nrow=3, ncol=3)
newMatrix
dim(newMatrix)
oneMatrix <- matrix(rep(1, times = 9), nrow = 3, ncol = 3)
oneMatrix
newMatrix + oneMatrix
newMatrix - oneMatrix
3*newMatrix
oneMatrix%*%newMatrix
newMatrix%*%oneMatrix
transMatrix<-t(newMatrix)
transMatrix
Identity<-diag(3)
Identity<-diag(3)
Identity
invMatrix<-solve(newMatrix)
invMatrix
invMatrix%*%newMatrix
floor(invMatrix%*%newMatrix)
ceiling(invMatrix%*%newMatrix)
round(invMatrix%*%newMatrix)
invMatrix%*%newMatrix
round(invMatrix%*%newMatrix,10)
eig <- eigen(newMatrix)
eig <- eigen(newMatrix)
eig
usAir<-USairpollution
View(usAir)
mvn(usAir, mvnTest = "mardia")
library(mvnormtest) # Mardia's test
mvn(usAir, mvnTest = "mardia")
library(MVN) # Mardia's test
mvn(usAir, mvnTest = "mardia")
par(mfrow=c(2,4))
mapply(hist,as.data.frame(usAir),main=colnames(usAir),xlab=" ")
par(mfrow=c(2,4))
mapply(hist,as.data.frame(usAir),main=colnames(usAir),xlab=" ")
library(knitr)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, warning = FALSE)
par(mfrow=c(2,4))
mapply(hist,as.data.frame(usAir),main=colnames(usAir),xlab=" ")
par(mfrow=c(2,4))
mapply(hist(),as.data.frame(usAir),main=colnames(usAir),xlab=" ")
mapply()
?mapply()
par(mfrow=c(2,4))
mapply(FUN = hist, as.data.frame(usAir), main=colnames(usAir), xlab=" ")
par(mfrow=c(2,4))
for (i in 1:ncol(usAir)){
hist(usAir[,i], main = colnames(usAir)[i], xlab = "")
}
par(mfrow=c(2,4))
for (i in 1:ncol(usAir)){
hist(usAir[,i], main = colnames(usAir)[i], xlab = "")
}
par(mfrow=c(2,4))
for (i in 1:ncol(usAir)){
print(hist(usAir[,i], main = colnames(usAir)[i], xlab = ""))
}
hist(usAir[,1])
hist(usAir[,1])
# par(mfrow=c(2,4))
# for (i in 1:ncol(usAir)){
#   print(hist(usAir[,i], main = colnames(usAir)[i], xlab = ""))
# }
?hist
hist(usAir[,1], plot = TRUE)
library(knitr)
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(echo = TRUE, tidy = TRUE)
library(MVA)
library(psych)
library(Hmisc)
library(vegan)
library(StatMatch)
library(MASS)
library(tidyverse)
library(MVN) # Mardia's test
newMatrix <- matrix(c(1,4,5,4,5,6,9,1,9),nrow=3, ncol=3)
newMatrix
dim(newMatrix)
oneMatrix <- matrix(rep(1, times = 9), nrow = 3, ncol = 3)
oneMatrix
transMatrix<-t(newMatrix)
transMatrix
Identity<-diag(3)
Identity
invMatrix<-solve(newMatrix)
invMatrix
eig <- eigen(newMatrix)
eig
usAir <- USairpollution
hist(usAir[,1], plot = TRUE)
?hist
# par(mfrow=c(2,4))
# for (i in 1:ncol(usAir)){
#   print(hist(usAir[,i], main = colnames(usAir)[i], xlab = ""))
# }
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(echo = TRUE, tidy = TRUE)
birds <- read.csv("./Data/Current_Hawaiian_Birds.csv", row=1, header=TRUE)
library(knitr)
opts_chunk$set(echo = TRUE, tidy = TRUE)
birds<-read.csv("./Data/Current_Hawaiian_Birds.csv", row=1, header=TRUE)
birds2<-read.csv("./Data/combined_birds.csv", row=1, header=TRUE)
library(vegan)
library(ca)
jbirds <- vegdist(birds, "bray")
jbirds
min(jbirds)
which(jbirds == min(jbirds))
jbirds
?wcmdscale
wcmd<-wcmdscale(jbirds, k=5, eig=TRUE)
wcmd$points
eigenvalues<-wcmd$eig[1:5]
propVar<-eigenvalues/sum(eigenvalues)
cumVar<-cumsum(propVar)
PCoA_Table<-cbind(eigenvalues,propVar,cumVar)
PCoA_Table
plot(eigenvalues)
lines(lowess(eigenvalues))
